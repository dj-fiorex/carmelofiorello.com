name: build-push-deploy-docker-image

permissions:
  contents: read
  packages: write

on:
  release:
    types:
      - published

concurrency:
  group: build-carmelofiorello
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORMS: linux/amd64,linux/arm64
      GITHUB_TOKEN: ${{ secrets.CR_PAT }}
      NODE_ENV: production
      IMAGE_NAME: ${{ github.repository }}
      IMAGE: ghcr.io/${{ github.repository }}
      CI: false
      GITHUB_USERNAME: ${{ github.repository_owner }}
      REACT_APP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This is automatically set by Github Actions
      USE_GITHUB_DATA: "true"
      MEDIUM_USERNAME: "carmelofiorello" # Change this to your medium username
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js npm token
        run: echo -e "GITHUB_USERNAME=${GITHUB_USERNAME}\nREACT_APP_GITHUB_TOKEN=${GITHUB_TOKEN}\nUSE_GITHUB_DATA=true\nMEDIUM_USERNAME=${MEDIUM_USERNAME}" > .env
      - name: Print out env
        run: cat .env

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          secret-files: |
            env=.env
          push: true
          cache-from: |
            type=gha,scope=${{ env.IMAGE_NAME }}:cache
            type=gha,scope=${{ env.IMAGE_NAME }}:cache-${{ github.event.release.tag_name }}
          cache-to: |
            type=gha,scope=${{ env.IMAGE_NAME }},mode=max
            type=gha,scope=${{ env.IMAGE_NAME }}-${{ github.event.release.tag_name }},mode=max
          platforms: ${{ env.TARGET_PLATFORMS }}
          tags: ${{ env.IMAGE }}:${{ github.event.release.tag_name }},${{ env.IMAGE }}:latest
      - name: Send POST to Portainer
        run: |
          curl --request POST https://portainer.carmelofiorello.com/api/stacks/webhooks/daf06618-eb17-4c18-9bf1-f9310f48447a
